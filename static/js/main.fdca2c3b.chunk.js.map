{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetail.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","href","style","color","backgroundColor","borderRadius","BlogList","blogs","title","map","item","src","img","alt","author","id","useFetch","url","useState","data","setData","isPending","isIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","minHeight","fontSize","Create","setTitle","body","setBody","setAuthor","setIsPending","history","useHistory","onSubmit","e","preventDefault","blog","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetail","useParams","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdca2c3b.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>The Ninja Blog</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/\">New Blog</Link>\r\n        <a\r\n          href=\"/\"\r\n          style={{\r\n            color: \"white\",\r\n            backgroundColor: \"#e21717\",\r\n            borderRadius: \"8px\",\r\n          }}\r\n        >\r\n          Sign In\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs, title }) => {\r\n  return (\r\n    <div className=\"blog-list\">\r\n      {blogs.map((item) => (\r\n        <div className=\"blog-list__previews\" key={item.id}>\r\n          <img src={item.img} alt=\"kakak\" />\r\n          <h2>{item.title}</h2>\r\n          <p>\r\n            Written by <b>{item.author}</b>\r\n          </p>\r\n          <Link to={`/detail/${item.id}`}>\r\n            <button>read blog</button>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import { useEffect, useState } from \"react\";\r\nconst useFetch = (url) => {\r\n  // useStates\r\n  const [data, setData] = useState(null);\r\n\r\n  const [isPending, isIsPending] = useState(true);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  //   useEffect\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n    setTimeout(() => {\r\n      fetch(url, { signal: abortCont.signal })\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw Error(\"could not fetch data from DATABASE\");\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setError(null);\r\n          setData(data);\r\n          isIsPending(false);\r\n        })\r\n        .catch((err) => {\r\n          if (err.name === \"AbortError\") {\r\n            console.log(\"Fetch Aborted\");\r\n          } else {\r\n            setError(err.message);\r\n            isIsPending(false);\r\n          }\r\n        });\r\n    }, 1000);\r\n\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","// import { useState, useEffect } from \"react\";\r\nimport BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { data: blogs, isPending, error } = useFetch(\r\n    \"http://localhost:8000/blogs\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__second\">\r\n        <div className=\"home__second__text\">\r\n          A place to Learn, teach and discuss about anything. Contribute and get\r\n          rewarded. Serving community is our number 1 priority !\r\n        </div>\r\n      </div>\r\n      {error && <div>{error}</div>}\r\n      {isPending && (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            minHeight: \"100vh\",\r\n            color: \"white\",\r\n            fontSize: \"15px\",\r\n          }}\r\n        >\r\n          Loading.......\r\n        </div>\r\n      )}\r\n      <div className=\"home__blog\">{blogs && <BlogList blogs={blogs} />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"Akshay\");\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    setIsPending(true);\r\n\r\n    fetch(\"http://localhost:8000/blogs\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog),\r\n    }).then(() => {\r\n      console.log(\"new data added\");\r\n      setIsPending(false);\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a new blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Title: </label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog Body: </label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        />\r\n        <label>Author: </label>\r\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\r\n          <option value=\"Akshay\">Akshay</option>\r\n          <option value=\"Hardik\">Hardik</option>\r\n          <option value=\"Rohit\">Rohit</option>\r\n          <option value=\"Pd\">Pd</option>\r\n        </select>\r\n        {!isPending && <button>Add blog</button>}\r\n        {isPending && <button disabled>Adding</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetail = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const { data: blogs, isPending, error } = useFetch(\r\n    \"http://localhost:8000/blogs/\" + id\r\n  );\r\n\r\n  const handleDelete = () => {\r\n    fetch(\"http://localhost:8000/blogs\" + blogs.id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      {isPending && (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#18191a\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          loading.....\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#18191a\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {blogs && (\r\n        <div className=\"blog-details__content\">\r\n          <article>\r\n            {/* <img src={`${blogs.img}`} alt=\"\" srcset=\"\" /> */}\r\n            <h2>{blogs.name}</h2>\r\n            {/* <p>Written by {blogs.author}</p> */}\r\n            {/* <div>{blogs.body}</div> */}\r\n            {/* <button onClick={handleDelete}>Delete blog</button> */}\r\n          </article>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetail;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>page not found</h2>\r\n      <Link to=\"/\">click to go back home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Create from \"./Create\";\nimport BlogDetail from \"./BlogDetail\";\nimport NotFound from \"./NotFound\";\n// import Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/detail/:id\">\n              <BlogDetail />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n        {/* <Footer /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}